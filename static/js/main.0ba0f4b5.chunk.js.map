{"version":3,"sources":["QuoteContainer.js","App.js","index.js"],"names":["QuoteContainer","state","data","quote","body","author","url","fade","colorNum","Math","floor","random","updateCurrentQuote","fetch","then","setState","response","json","console","log","document","className","props","newNum","classList","add","setTimeout","this","result","map","item","id","dangerouslySetInnerHTML","__html","IconButton","color","aria-label","href","target","onClick","Component","App","ReactDOM","render","getElementById"],"mappings":"2QA0GeA,E,4MAhGXC,MAAQ,CACJC,KAAM,CAAC,CAACC,MAAO,CACHC,KAAM,GACNC,OAAQ,MAEpBC,IAAK,GACLC,KAAM,KACNC,SAAUC,KAAKC,MAAsB,GAAhBD,KAAKE,SAAgB,I,EAG9CC,mBAAqB,WAKjBC,MAJY,8BAKPC,KAAK,EAAKC,SAAS,CAACR,KAAM,SAC1BO,MAAK,SAAAE,GAAQ,OAAIA,EAASC,UAC1BH,MAAK,SAAAZ,GACFgB,QAAQC,IAAIjB,EAAKC,MAAMC,MACvBgB,SAAShB,KAAKiB,UAAY,GAC1B,EAAKN,UAAS,SAASd,EAAOqB,GAE1B,IADA,IAAIC,EAASd,KAAKC,MAAsB,GAAhBD,KAAKE,SAAgB,GACtCY,IAAWtB,EAAMO,UACpBe,EAASd,KAAKC,MAAsB,GAAhBD,KAAKE,SAAgB,GAE7C,MAAO,CAACH,SAAUe,MAEtBH,SAAShB,KAAKoB,UAAUC,IAAI,IAAM,EAAKxB,MAAMO,UAC7CkB,YAAW,WAAO,EAAKX,SAAS,CAChCb,KAAM,CAACA,GACPI,IAAK,mFACHJ,EAAKC,MAAMC,KACX,OACAF,EAAKC,MAAME,OACbE,KAAM,SAAS,S,kEAIvBoB,KAAKf,uB,+BAGA,IAAD,OAGEgB,EAFSD,KAAK1B,MAAbC,KAEa2B,KAAI,SAACC,GACrB,OACI,sBAAKC,GAAG,YAAYV,UAAW,EAAKpB,MAAMM,KAA1C,UACI,qBACIwB,GAAG,OACHC,wBAAyB,CAACC,OAAQH,EAAK3B,MAAMC,QAGjD,sBAAK2B,GAAG,SAAR,eACOD,EAAK3B,MAAME,gBAS9B,OACI,qBAAK0B,GAAG,YAAR,SAGA,sBAAKA,GAAG,YAAR,UACI,8BACKH,IAED,sBAAKG,GAAG,iBAAR,UACI,cAACG,EAAA,EAAD,CACIC,MAAM,UACNC,aAAW,cACXC,KAAMV,KAAK1B,MAAMK,IACjBgC,OAAO,SACPP,GAAG,QALP,SAMI,cAAC,IAAD,MAER,qBAAKA,GAAG,YAAR,SACA,cAACG,EAAA,EAAD,CACIC,MAAM,UACNC,aAAW,YACXG,QAASZ,KAAKf,mBACdmB,GAAG,UAJP,SAKI,cAAC,IAAD,oB,GAxFKS,aCSdC,MAbf,WACE,OAAQ,sBAAKV,GAAG,QAAR,UACN,cAAC,EAAD,IACA,qBAAKA,GAAG,aAAR,SACE,sBAAKA,GAAG,cAAR,uCAC4B,uBAD5B,2BCHNW,IAASC,OAAO,cAAC,EAAD,IACdvB,SAASwB,eAAe,W","file":"static/js/main.0ba0f4b5.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport ReplayIcon from '@material-ui/icons/Replay';\nimport TwitterIcon from '@material-ui/icons/Twitter';\n\n\nclass QuoteContainer extends Component {\n\n    state = {\n        data: [{quote: {\n                    body: '', \n                    author: ''\n                }}],\n        url: '',\n        fade: 'in',\n        colorNum: Math.floor(Math.random() * 10 + 1)\n    }\n\n    updateCurrentQuote = () => {\n        const url = 'https://favqs.com/api/qotd';\n\n        \n        \n        fetch(url)\n            .then(this.setState({fade: 'out'}))\n            .then(response => response.json())\n            .then(data => {\n                console.log(data.quote.body);\n                document.body.className = '';\n                this.setState(function(state, props){\n                    let newNum = Math.floor(Math.random() * 10 + 1);\n                    while (newNum === state.colorNum){\n                        newNum = Math.floor(Math.random() * 10 + 1)\n                    }\n                    return {colorNum: newNum}\n                })\n                document.body.classList.add(\"c\" + this.state.colorNum);\n                setTimeout(() => {this.setState({\n                data: [data],\n                url: 'https://www.twitter.com/intent/tweet?hashtags=quotes&related=freecodecamp&text=\"' \n                + data.quote.body\n                + '\" - '\n                + data.quote.author,\n                fade: 'in'})}, 400)})\n    }\n\n    componentDidMount(){\n        this.updateCurrentQuote();\n    }\n    \n    render(){\n        const {data} = this.state;\n        \n        const result = data.map((item) => {\n            return (\n                <div id=\"the-quote\" className={this.state.fade}>\n                    <div \n                        id=\"text\"\n                        dangerouslySetInnerHTML={{__html: item.quote.body}}>\n                        {/* {item.quote.body} */}\n                    </div>\n                    <div id=\"author\">\n                        - {item.quote.author}\n                    </div>\n                </div>\n                // <ul>\n                //     <li>{item.quote.author}</li>\n                //     <li>{item.quote.body}</li>\n                // </ul>\n            )\n        })\n        return (\n            <div id=\"container\">\n\n\n            <div id=\"quote-box\">\n                <div>\n                    {result}\n                </div>\n                    <div id=\"link-container\">\n                        <IconButton \n                            color=\"primary\" \n                            aria-label=\"Tweet quote\"\n                            href={this.state.url}\n                            target=\"_blank\"\n                            id=\"tweet\">\n                            <TwitterIcon />\n                        </IconButton>\n                    <div id=\"new-quote\">\n                    <IconButton \n                        color=\"primary\" \n                        aria-label=\"New quote\"\n                        onClick={this.updateCurrentQuote}\n                        id=\"refresh\">\n                        <ReplayIcon />\n                    </IconButton>\n                    </div>\n                </div>\n            </div>\n            </div>\n        )\n    }\n}\n\nexport default QuoteContainer;","import React, { Component } from 'react';\nimport QuoteContainer from './QuoteContainer';\nimport Button from '@material-ui/core/Button';\n\nfunction App() {\n  return (<div id=\"conty\">\n    <QuoteContainer />\n    <div id=\"credit-div\">\n      <div id=\"credit-text\">\n        Quote Machine FCC Project <br></br> by Billy Brown\n      </div>\n    </div>\n  </div>\n  )\n  \n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}